// <auto-generated />
using Manager.Entities;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace WebAPIApplication.Migrations
{
    [DbContext(typeof(UserInfoContext))]
    [Migration("20180306125522_classroomadd")]
    partial class classroomadd
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.0.0-rtm-26452")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Manager.Entities.Classroom", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(200);

                    b.Property<int>("EducatorDetailId");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("EducatorDetailId");

                    b.ToTable("Classroom");
                });

            modelBuilder.Entity("Manager.Entities.Credential", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Email")
                        .IsRequired();

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100);

                    b.HasKey("Id");

                    b.ToTable("Credentials");
                });

            modelBuilder.Entity("Manager.Entities.EducatorDetail", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(200);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("EducatorDetails");
                });

            modelBuilder.Entity("Manager.Entities.Enrollment", b =>
                {
                    b.Property<int>("EnrollmentID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ClassroomID");

                    b.Property<int>("LearnerDetailsId");

                    b.HasKey("EnrollmentID");

                    b.HasIndex("ClassroomID");

                    b.HasIndex("LearnerDetailsId");

                    b.ToTable("Enrollment");
                });

            modelBuilder.Entity("Manager.Entities.LearnerDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.Property<bool>("Subscribed")
                        .HasMaxLength(10);

                    b.HasKey("Id");

                    b.ToTable("LearnerDetails");
                });

            modelBuilder.Entity("Manager.Entities.StudentInvitation", b =>
                {
                    b.Property<int>("StudentInvitationID")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("ClassroomID");

                    b.Property<string>("Email");

                    b.HasKey("StudentInvitationID");

                    b.HasIndex("ClassroomID");

                    b.ToTable("StudentInvitation");
                });

            modelBuilder.Entity("Manager.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description")
                        .HasMaxLength(200);

                    b.Property<int?>("EducatorDetailsId");

                    b.Property<int?>("LearnerDetailsId");

                    b.Property<string>("Name")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("EducatorDetailsId");

                    b.HasIndex("LearnerDetailsId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Manager.Entities.Classroom", b =>
                {
                    b.HasOne("Manager.Entities.EducatorDetail", "EducatorDetail")
                        .WithMany("Classrooms")
                        .HasForeignKey("EducatorDetailId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Manager.Entities.Enrollment", b =>
                {
                    b.HasOne("Manager.Entities.Classroom", "Classroom")
                        .WithMany("Enrollment")
                        .HasForeignKey("ClassroomID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Manager.Entities.LearnerDetail", "LearnerDetails")
                        .WithMany("Enrollments")
                        .HasForeignKey("LearnerDetailsId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Manager.Entities.StudentInvitation", b =>
                {
                    b.HasOne("Manager.Entities.Classroom", "Classroom")
                        .WithMany("StudentInvitation")
                        .HasForeignKey("ClassroomID")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Manager.Entities.User", b =>
                {
                    b.HasOne("Manager.Entities.EducatorDetail", "EducatorDetails")
                        .WithMany()
                        .HasForeignKey("EducatorDetailsId");

                    b.HasOne("Manager.Entities.LearnerDetail", "LearnerDetails")
                        .WithMany()
                        .HasForeignKey("LearnerDetailsId");
                });
#pragma warning restore 612, 618
        }
    }
}
